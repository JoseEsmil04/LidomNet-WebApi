// <auto-generated />
using System;
using LidomNet.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LidomNet.Data.Migrations
{
    [DbContext(typeof(LidomNetDbContext))]
    [Migration("20241020000115_PartidosRelation")]
    partial class PartidosRelation
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LidomNet.Domain.Equipo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AnioFuncadion")
                        .HasColumnType("datetime2");

                    b.Property<int>("Campeonatos")
                        .HasColumnType("int");

                    b.Property<string>("Ciudad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Equipos");
                });

            modelBuilder.Entity("LidomNet.Domain.Estadio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Capacidad")
                        .HasColumnType("int");

                    b.Property<string>("Ciudad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("EquipoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EquipoId");

                    b.ToTable("Estadios");
                });

            modelBuilder.Entity("LidomNet.Domain.Jugador", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EquipoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Posicion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EquipoId");

                    b.ToTable("Jugadores");
                });

            modelBuilder.Entity("LidomNet.Domain.Partido", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("EquipoLocalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("EquipoVisitanteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("EstadioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("MarcadorLocal")
                        .HasColumnType("int");

                    b.Property<int>("MarcadorVisitante")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EquipoLocalId");

                    b.HasIndex("EquipoVisitanteId");

                    b.HasIndex("EstadioId");

                    b.ToTable("Partidos");
                });

            modelBuilder.Entity("LidomNet.Domain.Estadio", b =>
                {
                    b.HasOne("LidomNet.Domain.Equipo", "Equipo")
                        .WithMany()
                        .HasForeignKey("EquipoId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Equipo");
                });

            modelBuilder.Entity("LidomNet.Domain.Jugador", b =>
                {
                    b.HasOne("LidomNet.Domain.Equipo", "Equipo")
                        .WithMany("Jugadores")
                        .HasForeignKey("EquipoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Equipo");
                });

            modelBuilder.Entity("LidomNet.Domain.Partido", b =>
                {
                    b.HasOne("LidomNet.Domain.Equipo", "EquipoLocal")
                        .WithMany("PartidosLocal")
                        .HasForeignKey("EquipoLocalId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("LidomNet.Domain.Equipo", "EquipoVisitante")
                        .WithMany("PartidosVisitante")
                        .HasForeignKey("EquipoVisitanteId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("LidomNet.Domain.Estadio", "Estadio")
                        .WithMany()
                        .HasForeignKey("EstadioId");

                    b.Navigation("EquipoLocal");

                    b.Navigation("EquipoVisitante");

                    b.Navigation("Estadio");
                });

            modelBuilder.Entity("LidomNet.Domain.Equipo", b =>
                {
                    b.Navigation("Jugadores");

                    b.Navigation("PartidosLocal");

                    b.Navigation("PartidosVisitante");
                });
#pragma warning restore 612, 618
        }
    }
}
